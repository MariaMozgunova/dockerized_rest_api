name: workflow


on: 
  push:
    branches:
      - master
  
  workflow_dispatch:
    branches:
      - master


jobs: 
  tests:
    runs-on:  ubuntu-latest
    steps:  
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8
      - name: Lint with flake8
        run: flake8 --exclude migrations,tests .


  build_and_push_to_docker_hub:
    name: Push Docker image to Docker Hub
    runs-on: ubuntu-latest
    needs: tests
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to Docker
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Push web to Docker Hub
        uses: docker/build-push-action@v2
        with:
          context: ./web
          push: true
          tags: mariamozgunova/yamdb-final:latest


  deploy:
    runs-on: ubuntu-latest
    needs: build_and_push_to_docker_hub
    steps:
    - uses: actions/checkout@v2
    - name: Copy docker-compose.yaml to server via SSH
      uses: appleboy/scp-action@master
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USER }}
        key: ${{ secrets.SSH_KEY }}
        source: "docker-compose.yaml,nginx/nginx.conf,init-letsencrypt.sh"
        target: "yamdb"
    - name: Execute remote ssh commands to deploy yamdb service
      uses: appleboy/ssh-action@master
      env:
        DB_ENGINE: ${{ secrets.DB_ENGINE }}
        DB_HOST: ${{ secrets.DB_HOST }}
        DB_NAME: ${{ secrets.DB_NAME }}
        DB_PORT: ${{ secrets.DB_PORT }}
        DEBUG: ${{ secrets.DEBUG }}
        DJANGO_CONTAINER: ${{ secrets.DJANGO_CONTAINER }}
        EMAIL: ${{ secrets.EMAIL }}
        DOMAIN: ${{ secrets.DOMAIN }}
        HOST: ${{ secrets.HOST }}
        NGINX_CONTAINER: ${{ secrets.NGINX_CONTAINER }}
        POSTGRES_PASSWORD: ${{ secrets.DB_ENGINE }}
        POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
        ROOT: ${{ secrets.ROOT }}
        SECRET_KEY: ${{ secrets.SECRET_KEY }}
        WWWDOMAIN: ${{ secrets.WWWDOMAIN }}
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USER }}
        key: ${{ secrets.SSH_KEY }}
        passphrase: ${{ secrets.PASSPHRASE }}
        envs: DB_ENGINE,DB_HOST,DB_NAME,DB_PORT,DEBUG,DJANGO_CONTAINER,DOMAIN,HOST,NGINX_CONTAINER,POSTGRES_PASSWORD,POSTGRES_USER,ROOT,SECRET_KEY,WWWDOMAIN
        script: |
          cd yamdb
          sudo docker-compose down
          sudo docker-compose pull web
          sudo DB_ENGINE=$DB_ENGINE DB_HOST=$DB_HOST DB_NAME=$DB_NAME DB_PORT=$DB_PORT DEBUG=$DEBUG DJANGO_CONTAINER=$DJANGO_CONTAINER POSTGRES_PASSWORD=$POSTGRES_PASSWORD POSTGRES_USER=$POSTGRES_USER SECRET_KEY=$SECRET_KEY docker-compose up -d web
          sudo chmod +x init-letsencrypt.sh
          sudo DJANGO_CONTAINER=$DJANGO_CONTAINER DOMAIN=$DOMAIN EMAIL=$EMAIL HOST=$HOST NGINX_CONTAINER=$NGINX_CONTAINER ROOT=$ROOT WWWDOMAIN=$WWWDOMAIN ./init-letsencrypt.sh
          sudo docker exec $DJANGO_CONTAINER mv redoc.yaml static/redoc.yaml
          sudo docker exec $DJANGO_CONTAINER python manage.py migrate
          

  notify:
    runs-on: ubuntu-latest
    needs: deploy
    steps:
    - name: Send telegram message
      uses: appleboy/telegram-action@master
      with:
        to: ${{ secrets.TELEGRAM_TO }}
        token: ${{ secrets.TELEGRAM_TOKEN }}
        message: ${{ github.workflow }} executed successfully! 

    - name: Send slack message
      uses: joshmgross/send-slack-message@main
      with: 
        channel: ${{ secrets.SLACK_TO }}
        slack-token: ${{ secrets.SLACK_TOKEN }}
        message: Just want to tell that your ${{ github.workflow }} terminated safely. 
